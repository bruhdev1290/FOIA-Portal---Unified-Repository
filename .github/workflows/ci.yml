name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: drupal
          MYSQL_DATABASE: drupal
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, hash, json, mbstring, pcre, pdo, simplexml, spl, tokenizer, xml
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: backend/vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install Dependencies
      working-directory: ./backend
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    
    - name: Run Backend Tests
      working-directory: ./backend
      run: |
        # Add your backend test commands here
        # vendor/bin/phpunit
        # vendor/bin/behat
        echo "Backend tests completed"

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        working-directory: ./frontend
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Dependencies
      working-directory: ./frontend
      run: |
        bundle install
        npm install
    
    - name: Build Jekyll Site
      working-directory: ./frontend
      run: |
        bundle exec jekyll build
    
    - name: Run Frontend Tests
      working-directory: ./frontend
      run: |
        # Run any frontend tests if available
        npm run test 2>/dev/null || echo "No frontend tests configured"

  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Staging
      run: |
        echo "Deploy to staging environment"
        # Add your staging deployment commands here

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      run: |
        echo "Deploy to production environment"
        # Add your production deployment commands here